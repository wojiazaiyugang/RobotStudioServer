# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import robot_pb2 as robot__pb2


class RobotServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HelloWorld = channel.unary_unary(
                '/RobotService/HelloWorld',
                request_serializer=robot__pb2.RequestI.SerializeToString,
                response_deserializer=robot__pb2.ResponseS.FromString,
                )
        self.TeachSetIndex = channel.unary_unary(
                '/RobotService/TeachSetIndex',
                request_serializer=robot__pb2.RequestI.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetIndex = channel.unary_unary(
                '/RobotService/TeachGetIndex',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachSetTool = channel.unary_unary(
                '/RobotService/TeachSetTool',
                request_serializer=robot__pb2.RequestS.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetTool = channel.unary_unary(
                '/RobotService/TeachGetTool',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseS.FromString,
                )
        self.TeachSetWobj = channel.unary_unary(
                '/RobotService/TeachSetWobj',
                request_serializer=robot__pb2.RequestS.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetWobj = channel.unary_unary(
                '/RobotService/TeachGetWobj',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseS.FromString,
                )
        self.TeachSetCoordinate = channel.unary_unary(
                '/RobotService/TeachSetCoordinate',
                request_serializer=robot__pb2.RequestI.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetCoordinate = channel.unary_unary(
                '/RobotService/TeachGetCoordinate',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetNum = channel.unary_unary(
                '/RobotService/TeachGetNum',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetDof = channel.unary_unary(
                '/RobotService/TeachGetDof',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachGetJoint = channel.unary_unary(
                '/RobotService/TeachGetJoint',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseRD.FromString,
                )
        self.TeachStreamGetJoint = channel.unary_stream(
                '/RobotService/TeachStreamGetJoint',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseRD.FromString,
                )
        self.TeachGetCartesian = channel.unary_unary(
                '/RobotService/TeachGetCartesian',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseRD.FromString,
                )
        self.TeachStreamGetCartesian = channel.unary_stream(
                '/RobotService/TeachStreamGetCartesian',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseRD.FromString,
                )
        self.TeachSetVelocity = channel.unary_unary(
                '/RobotService/TeachSetVelocity',
                request_serializer=robot__pb2.RequestD.SerializeToString,
                response_deserializer=robot__pb2.Response.FromString,
                )
        self.TeachGetVelocity = channel.unary_unary(
                '/RobotService/TeachGetVelocity',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseD.FromString,
                )
        self.TeachSetRunType = channel.unary_unary(
                '/RobotService/TeachSetRunType',
                request_serializer=robot__pb2.RequestI.SerializeToString,
                response_deserializer=robot__pb2.Response.FromString,
                )
        self.TeachGetRunType = channel.unary_unary(
                '/RobotService/TeachGetRunType',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachClearMoveError = channel.unary_unary(
                '/RobotService/TeachClearMoveError',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.Response.FromString,
                )
        self.TeachStartProject = channel.unary_unary(
                '/RobotService/TeachStartProject',
                request_serializer=robot__pb2.RequestS.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachStopProject = channel.unary_unary(
                '/RobotService/TeachStopProject',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachMoveStart = channel.unary_unary(
                '/RobotService/TeachMoveStart',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachMoveStop = channel.unary_unary(
                '/RobotService/TeachMoveStop',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachMoveHome = channel.unary_unary(
                '/RobotService/TeachMoveHome',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachMove = channel.unary_unary(
                '/RobotService/TeachMove',
                request_serializer=robot__pb2.RequestII.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachStop = channel.unary_unary(
                '/RobotService/TeachStop',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachCalibrateAxis = channel.unary_unary(
                '/RobotService/TeachCalibrateAxis',
                request_serializer=robot__pb2.RequestI.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )
        self.TeachCalibrate = channel.unary_unary(
                '/RobotService/TeachCalibrate',
                request_serializer=robot__pb2.Request.SerializeToString,
                response_deserializer=robot__pb2.ResponseI.FromString,
                )


class RobotServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def HelloWorld(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachSetIndex(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetIndex(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachSetTool(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetTool(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachSetWobj(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetWobj(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachSetCoordinate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetCoordinate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetNum(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetDof(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetJoint(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachStreamGetJoint(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetCartesian(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachStreamGetCartesian(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachSetVelocity(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetVelocity(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachSetRunType(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachGetRunType(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachClearMoveError(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachStartProject(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachStopProject(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachMoveStart(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachMoveStop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachMoveHome(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachMove(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachStop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachCalibrateAxis(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeachCalibrate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RobotServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HelloWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.HelloWorld,
                    request_deserializer=robot__pb2.RequestI.FromString,
                    response_serializer=robot__pb2.ResponseS.SerializeToString,
            ),
            'TeachSetIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachSetIndex,
                    request_deserializer=robot__pb2.RequestI.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetIndex,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachSetTool': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachSetTool,
                    request_deserializer=robot__pb2.RequestS.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetTool': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetTool,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseS.SerializeToString,
            ),
            'TeachSetWobj': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachSetWobj,
                    request_deserializer=robot__pb2.RequestS.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetWobj': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetWobj,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseS.SerializeToString,
            ),
            'TeachSetCoordinate': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachSetCoordinate,
                    request_deserializer=robot__pb2.RequestI.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetCoordinate': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetCoordinate,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetNum': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetNum,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetDof': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetDof,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachGetJoint': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetJoint,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseRD.SerializeToString,
            ),
            'TeachStreamGetJoint': grpc.unary_stream_rpc_method_handler(
                    servicer.TeachStreamGetJoint,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseRD.SerializeToString,
            ),
            'TeachGetCartesian': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetCartesian,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseRD.SerializeToString,
            ),
            'TeachStreamGetCartesian': grpc.unary_stream_rpc_method_handler(
                    servicer.TeachStreamGetCartesian,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseRD.SerializeToString,
            ),
            'TeachSetVelocity': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachSetVelocity,
                    request_deserializer=robot__pb2.RequestD.FromString,
                    response_serializer=robot__pb2.Response.SerializeToString,
            ),
            'TeachGetVelocity': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetVelocity,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseD.SerializeToString,
            ),
            'TeachSetRunType': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachSetRunType,
                    request_deserializer=robot__pb2.RequestI.FromString,
                    response_serializer=robot__pb2.Response.SerializeToString,
            ),
            'TeachGetRunType': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachGetRunType,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachClearMoveError': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachClearMoveError,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.Response.SerializeToString,
            ),
            'TeachStartProject': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachStartProject,
                    request_deserializer=robot__pb2.RequestS.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachStopProject': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachStopProject,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachMoveStart': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachMoveStart,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachMoveStop': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachMoveStop,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachMoveHome': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachMoveHome,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachMove': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachMove,
                    request_deserializer=robot__pb2.RequestII.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachStop': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachStop,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachCalibrateAxis': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachCalibrateAxis,
                    request_deserializer=robot__pb2.RequestI.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
            'TeachCalibrate': grpc.unary_unary_rpc_method_handler(
                    servicer.TeachCalibrate,
                    request_deserializer=robot__pb2.Request.FromString,
                    response_serializer=robot__pb2.ResponseI.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RobotService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RobotService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def HelloWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/HelloWorld',
            robot__pb2.RequestI.SerializeToString,
            robot__pb2.ResponseS.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachSetIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachSetIndex',
            robot__pb2.RequestI.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetIndex',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachSetTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachSetTool',
            robot__pb2.RequestS.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetTool',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseS.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachSetWobj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachSetWobj',
            robot__pb2.RequestS.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetWobj(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetWobj',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseS.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachSetCoordinate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachSetCoordinate',
            robot__pb2.RequestI.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetCoordinate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetCoordinate',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetNum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetNum',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetDof(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetDof',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetJoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetJoint',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseRD.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachStreamGetJoint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/RobotService/TeachStreamGetJoint',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseRD.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetCartesian(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetCartesian',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseRD.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachStreamGetCartesian(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/RobotService/TeachStreamGetCartesian',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseRD.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachSetVelocity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachSetVelocity',
            robot__pb2.RequestD.SerializeToString,
            robot__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetVelocity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetVelocity',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseD.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachSetRunType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachSetRunType',
            robot__pb2.RequestI.SerializeToString,
            robot__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachGetRunType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachGetRunType',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachClearMoveError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachClearMoveError',
            robot__pb2.Request.SerializeToString,
            robot__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachStartProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachStartProject',
            robot__pb2.RequestS.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachStopProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachStopProject',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachMoveStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachMoveStart',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachMoveStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachMoveStop',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachMoveHome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachMoveHome',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachMove',
            robot__pb2.RequestII.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachStop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachStop',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachCalibrateAxis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachCalibrateAxis',
            robot__pb2.RequestI.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TeachCalibrate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RobotService/TeachCalibrate',
            robot__pb2.Request.SerializeToString,
            robot__pb2.ResponseI.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
